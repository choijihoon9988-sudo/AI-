rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 개인 프롬프트에 대한 규칙
    match /prompts/{promptId} {
      // 주인이 있고, 길드 소속이 아닌 개인 프롬프트에 대한 규칙
      function isOwner() {
        return request.auth != null && request.auth.uid == resource.data.userId;
      }
      // 길드에 소속된 프롬프트인지 확인
      function isGuildPrompt() {
        return "guildId" in resource.data;
      }

      allow read, update, delete: if isOwner() && !isGuildPrompt();
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId && !isGuildPrompt();

      // 버전 관리 서브컬렉션 규칙 (기존과 동일)
      match /versions/{versionId} {
        allow read, create: if isOwner();
      }
    }

    // 길드(팀) 정보에 대한 규칙
    match /guilds/{guildId} {
      // 길드 멤버인지 확인 (역할: owner, member)
      function isGuildMember() {
        return request.auth != null && get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] in ['owner', 'member'];
      }
      // 길드 소유주인지 확인
      function isGuildOwner() {
        return request.auth != null && get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] == 'owner';
      }

      // 길드 멤버는 길드 정보를 읽을 수 있음
      allow read: if isGuildMember();
      // 길드 소유주만 길드 정보를 수정(멤버 추가/삭제 등)하거나 길드를 삭제할 수 있음
      allow update, delete: if isGuildOwner();
      // 로그인한 사용자는 누구나 길드를 생성할 수 있음
      allow create: if request.auth != null;

      // 길드에 소속된 프롬프트에 대한 규칙
      match /prompts/{promptId} {
        // 길드 멤버는 해당 길드의 프롬프트를 읽고, 쓰고, 수정하고, 삭제할 수 있음
        allow read, write: if isGuildMember();
      }
    }
  }
}