rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 사용자 정보는 본인만 생성/수정 가능하고, 모든 인증된 사용자가 읽을 수 있게 함 (이메일 검색용)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // 개인 프롬프트에 대한 규칙
    match /prompts/{promptId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      match /versions/{versionId} {
        allow read, create: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/prompts/$(promptId)).data.userId;
      }
    }

    // 길드(팀) 정보에 대한 규칙
    match /guilds/{guildId} {
      function isGuildMember() {
        return request.auth != null && resource.data.memberIds.hasAny([request.auth.uid]);
      }
       function isGuildOwner() {
        return request.auth != null && resource.data.members[request.auth.uid] == 'owner';
      }
      
      allow read: if isGuildMember();
      // ✨ 수정된 규칙: owner는 createdAt 필드를 제외하고 길드 정보를 업데이트할 수 있습니다.
      allow update: if isGuildOwner() && request.resource.data.createdAt == resource.data.createdAt;
      allow delete: if isGuildOwner();
      allow create: if request.auth != null;

      // 길드에 소속된 프롬프트(하위 컬렉션)에 대한 규칙
      match /prompts/{promptId} {
        function isParentGuildMember() {
          return get(/databases/$(database)/documents/guilds/$(guildId)).data.memberIds.hasAny([request.auth.uid]);
        }
        function isParentGuildEditorOrOwner() {
          return get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] in ['owner', 'editor'];
        }

        allow read: if isParentGuildMember();
        allow write: if isParentGuildEditorOrOwner();
      }
    }
  }
}