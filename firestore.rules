rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 개인 프롬프트에 대한 규칙
    match /prompts/{promptId} {
      function isOwner() {
        return request.auth != null && request.auth.uid == resource.data.userId;
      }

      // ✨ 최종 수정: 목록 조회(list) 규칙을 단순화하여 클라이언트의 쿼리와 일치시킴
      // 이제 이 규칙은 "소유자"이기만 하면 개인 프롬프트에 대한 모든 읽기 작업을 허용함.
      allow read: if isOwner();

      // 쓰기 권한
      allow update, delete: if isOwner();
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // 버전 관리 서브컬렉션 규칙
      match /versions/{versionId} {
        allow read, create: if isOwner();
      }
    }

    // 길드(팀) 정보에 대한 규칙
    match /guilds/{guildId} {
      function isGuildMember() {
        return request.auth != null && get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] in ['owner', 'editor', 'viewer'];
      }
      function isGuildEditorOrOwner() {
          return request.auth != null && get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] in ['owner', 'editor'];
      }
      function isGuildOwner() {
        return request.auth != null && get(/databases/$(database)/documents/guilds/$(guildId)).data.members[request.auth.uid] == 'owner';
      }

      allow read: if isGuildMember();
      allow update, delete: if isGuildOwner();
      allow create: if request.auth != null;

      // 길드에 소속된 프롬프트에 대한 규칙
      match /prompts/{promptId} {
        allow read: if isGuildMember();
        allow write: if isGuildEditorOrOwner();
      }
    }
  }
}